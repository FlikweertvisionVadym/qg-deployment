{{- $url := .Values.endpoint }}
{{- $ipRegex := `[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+` }}
{{- $panelpc_ip := regexFind $ipRegex $url }}

apiVersion: batch/v1
kind: Job
metadata:
  name: refresh-browser
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation,HookSucceeded
spec:
  backoffLimit: 120
  template:
    spec:
      nodeSelector:
        machine-type: "PanelPC"
      containers:
        - name: refresh-browser
          image: alpine/curl:latest
          command:
            - sh
            - -c
            - |
              endpoint="{{ $panelpc_ip }}:3000"

              # Loop until the endpoint is reachable
              while ! curl --silent --head $endpoint > /dev/null; do
                echo "Waiting for endpoint $endpoint to be reachable..."
                sleep 2  # Wait for 2 seconds before retrying
              done

              apk add --no-cache openssh
              apk add --no-cache sshpass

              ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa
              cp /root/.ssh_copy/authorized_keys /tmp/authorized_keys
              cat ~/.ssh/id_rsa.pub >> /root/.ssh_copy/authorized_keys
              
              echo "Endpoint $endpoint is reachable. Proceeding..."

              # Update kiosk.sh to ensure the correct user-agent is set
              UPDATE_USER_AGENT_SCRIPT='
              if grep -q "/usr/bin/chromium-browser" /home/kiosk/kiosk.sh; then
                if grep -q -- "--user-agent=" /home/kiosk/kiosk.sh; then
                  # User agent flag exists, update if needed
                  if ! grep -q -- "--user-agent=\"UA_panelpc_fvt\"" /home/kiosk/kiosk.sh; then
                    # Replace existing user-agent with the correct one
                    sed -i "s/--user-agent=[^[:space:]]*/--user-agent=\"UA_panelpc_fvt\"/" /home/kiosk/kiosk.sh
                    echo "Updated user-agent parameter"
                  else
                    echo "User-agent parameter already set correctly"
                  fi
                else
                  # User agent flag doesn't exist, add it as the first argument
                  sed -i "s|/usr/bin/chromium-browser|/usr/bin/chromium-browser --user-agent=\"UA_panelpc_fvt\"|" /home/kiosk/kiosk.sh
                  echo "Added user-agent parameter"
                fi
              else
                echo "Could not find chromium-browser command in kiosk.sh"
              fi
              '
              
              # Execute the update script on the remote machine
              ssh -o StrictHostKeyChecking=no root@{{ $panelpc_ip }} "bash -c '$UPDATE_USER_AGENT_SCRIPT'"
              
              # Then proceed with restarting the browser
              COMMAND_KILL_CHROME="sudo apt install -y screen && pgrep chrome | xargs kill -9;"
              COMMAND_START_CHROME="sudo -u kiosk -i bash -c \"export DISPLAY=:0 && screen -S start_browser -d -m bash -c './kiosk.sh; exec bash' exit\""
              ssh -o StrictHostKeyChecking=no root@{{ $panelpc_ip }} "$COMMAND_KILL_CHROME"
              ssh -o StrictHostKeyChecking=no root@{{ $panelpc_ip }} "$COMMAND_START_CHROME"
              cat ~/.ssh_copy/authorized_keys
              mv /tmp/authorized_keys /root/.ssh_copy/authorized_keys
          volumeMounts:
            - name: ssh-keys
              mountPath: /root/.ssh_copy
      restartPolicy: Never
      volumes:
        - name: ssh-keys
          hostPath:
            path: /root/.ssh
            type: Directory
