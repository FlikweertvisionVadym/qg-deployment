{{- $group := .Values.group | index .Values.groups }}
{{- $machineTypes := list "QG" "DV" }} # Define supported machine types
{{- $isDV := eq (lower (toString (default "" $group.type))) "dv" }}
{{- $typeSuffix := ternary "-dv" "" $isDV }}

{{- range $machineType := $machineTypes }}
  {{- if hasKey $group.software $machineType }} # Ensure the software exists before processing
    {{- $software := index $group.software $machineType }}
    {{- $qgImageName := ternary "quality_grader-divider" "quality_grader" $isDV }}
---
apiVersion: apps.kruise.io/v1alpha1
kind: ImagePullJob
metadata:
  name: pre-pull-image-{{ lower $machineType }}
  namespace: default
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation,HookSucceeded
    argocd.argoproj.io/sync-wave: "-1"
spec:
  pullSecrets:
  - regcred
  image: docker.io/flikweertvision/{{ $qgImageName }}:{{ $software.softwareVersion }}
  parallelism: 5
  selector:
    matchLabels:
      machine-type: {{ $machineType }}
  completionPolicy:
    type: Always
    activeDeadlineSeconds: 3000
    ttlSecondsAfterFinished: 300
  pullPolicy:
    backoffLimit: 5
    timeoutSeconds: 300
  {{- end }}
{{- end }}

{{- $panelPCAPI := index $group.software "PanelPC-API" | default dict }}
{{- $panelPCGUI := index $group.software "PanelPC-GUI" | default dict }}
{{- $ppcApiImage := ternary "panelpc-api-divider" "panelpc-api" $isDV }}
{{- $ppcGuiImage := ternary "panelpc-gui-divider" "panelpc-gui" $isDV }}

{{- if $panelPCAPI.softwareVersion }}
---
apiVersion: apps.kruise.io/v1alpha1
kind: ImagePullJob
metadata:
  name: pre-pull-image-panelpc-api{{ $typeSuffix }}
  namespace: default
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation,HookSucceeded
    argocd.argoproj.io/sync-wave: "-1"
spec:
  pullSecrets: [ { name: regcred } ]
  image: docker.io/flikweertvision/{{ $ppcApiImage }}:{{ $panelPCAPI.softwareVersion }}
  parallelism: 5
  selector:
    matchLabels:
      machine-type: PanelPC
  completionPolicy:
    type: Always
    activeDeadlineSeconds: 3000
    ttlSecondsAfterFinished: 300
  pullPolicy:
    backoffLimit: 5
    timeoutSeconds: 300
{{- end }}

{{- if $panelPCGUI.softwareVersion }}
---
apiVersion: apps.kruise.io/v1alpha1
kind: ImagePullJob
metadata:
  name: pre-pull-image-panelpc-gui{{ $typeSuffix }}
  namespace: default
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation,HookSucceeded
    argocd.argoproj.io/sync-wave: "-1"
spec:
  pullSecrets: [ { name: regcred } ]
  image: docker.io/flikweertvision/{{ $ppcGuiImage }}:{{ $panelPCGUI.softwareVersion }}
  parallelism: 5
  selector:
    matchLabels:
      machine-type: PanelPC
  completionPolicy:
    type: Always
    activeDeadlineSeconds: 3000
    ttlSecondsAfterFinished: 300
  pullPolicy:
    backoffLimit: 5
    timeoutSeconds: 300
{{- end }}