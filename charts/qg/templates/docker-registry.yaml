apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels: { app: docker-registry }
  template:
    metadata:
      labels: { app: docker-registry }
    spec:
      nodeSelector:
        machine-type: "PanelPC"

      volumes:
      - name: regcred
        secret:
          secretName: regcred
      - name: registry-data
        hostPath:
          path: /opt/registry
          type: DirectoryOrCreate
      - name: registry-config
        emptyDir: {}

      initContainers:
      - name: build-config
        image: busybox:1.36
        volumeMounts:
        - { name: regcred, mountPath: /reg, readOnly: true }
        - { name: registry-config, mountPath: /cfg }
        command: ["/bin/sh","-c"]
        args:
        - |
          user=$(sed -n 's/.*"username":[[:space:]]*"\([^"]*\)".*/\1/p' /reg/.dockerconfigjson | head -n1)
          pass=$(sed -n 's/.*"password":[[:space:]]*"\([^"]*\)".*/\1/p' /reg/.dockerconfigjson | head -n1)
          cat > /cfg/config.yml <<EOF
          version: 0.1
          log:
            level: info
          storage:
            filesystem:
              rootdirectory: /var/lib/registry
          http:
            addr: :5233
          proxy:
            remoteurl: https://registry-1.docker.io
            username: $user
            password: $pass
          EOF

      containers:
      - name: registry
        image: registry:3
        ports:
        - containerPort: 5233
          hostPort: 5233
        volumeMounts:
        - { name: registry-data,   mountPath: /var/lib/registry }
        - { name: registry-config, mountPath: /etc/docker/registry, readOnly: true }
        args: ["/etc/docker/registry/config.yml"]  # no shell in main container

---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry
  namespace: default
spec:
  selector: { app: docker-registry }
  ports:
  - name: http
    port: 5233
    targetPort: 5233
