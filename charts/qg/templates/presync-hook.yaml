{{- $url := .Values.endpoint }}
{{- $ipRegex := `[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+` }}
{{- $panelpc_ip := regexFind $ipRegex $url }}

apiVersion: batch/v1
kind: Job
metadata:
  name: machine-status-check
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation,HookSucceeded
    argocd.argoproj.io/sync-wave: "0"
spec:
  backoffLimit: 120
  template:
    spec:
      containers:
        - name: machine-status-check
          image: alpine/curl:latest
          command:
            - /bin/sh
            - -c
            - |                
                # Step 1: Check if the machine status endpoint is reachable
                endpoint="{{ $panelpc_ip }}:5000"

                # Construct the full URL with the specified port
                full_url="http://$endpoint/machine_status_monitorings_systeem"

                echo "Checking endpoint: $full_url"
                response=$(curl -s --max-time 10 "$full_url")

                if [ $? -ne 0 ]; then
                  echo "Endpoint $endpoint is not reachable. Allowing sync to proceed."
                  exit 0
                fi

                # Step 3: Parse the response and check machine status
                echo "Response from endpoint: $response"
                if echo "$response" | grep -q '"QG_active":true' || echo "$response" | grep -q '"VS_active":true'; then
                  echo "Machine status is not as expected."
                  exit 1
                else
                  echo "Machine status is as expected."
                fi
      restartPolicy: Never